<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="usersMapper">

	<!-- select 한 결과집합 ResultSet 에서 한 행씩 꺼내서 
	각 컬럼값들을 vo 객체의 각 필드에 저장 처리하는 작업
	: 결과 매핑
	리스트나 맵에 여러 객체를 저장 처리도 포함됨 -->
	<resultMap type="Users" id="resultUsers">
		<id property="user_email" column="user_email" />
		<result property="user_pwd" column="user_pwd" />
		<result property="user_name" column="user_name" />
		<result property="user_phone" column="user_phone" />
		<result property="create_at" column="create_at" />
		<result property="modifyed_at" column="modifyed_at" />
		<result property="login_ok" column="login_ok" />
		<result property="admin_ok" column="admin_ok" />
		<result property="user_allergy" column="user_allergy" />
	</resultMap>

	<!-- 로그인 처리용 -->
	<select id="selectLogin" parameterType="Users" 
		resultType="Users">
		select * from users
		where user_email = #{ user_email } and user_pwd = #{ user_pwd }
		and login_ok = 'Y'
	</select>
	
<!--	&lt;!&ndash; 아이디로 회원 정보 조회용 &ndash;&gt;-->
<!--	<select id="selectUsers" parameterType="string" -->
<!--		resultMap="resultUserfs">-->
<!--		select * from users-->
<!--		where user_email = #{ user_email }-->
<!--	</select>-->
	
	<!-- 회원가입시 아이디 중복 체크 처리용 -->
	<select id="selectDupCheckId" parameterType="string" resultType="_int">
		select count(user_email) from users
		where user_email = #{ uid }
	</select>
	
	<!-- 회원 전체 조회용 -->
	<select id="selectList" resultMap="resultUsers">
		select * from users
	</select>
	
	<!-- 회원 가입 처리용 -->
	<insert id="insertUsers" parameterType="Users" >
		insert into users (user_email, user_pwd, user_name, 
			    user_phone, create_at, 
				modifyed_at, login_ok, admin_ok, user_allergy)
		values (#{ user_email }, #{ user_pwd }, #{ user_name }, 
			    #{ user_phone }, default, default, default, default,
			    default)
	</insert>
	
	<!-- 회원 탈퇴 처리용 -->
	<delete id="deleteUsers" parameterType="string">
		delete from users
		where user_email = #{ uid }
	</delete>
	
	<!-- 회원 정보 수정 처리용 -->
	<update id="updateUsers" parameterType="Users">
		update users
		set user_pwd = #{ user_pwd }, 
			user_phone = #{ user_phone },
			modifyed_at = sysdate
		where user_email = #{ user_email }
	</update>
	
	<update id="updateLoginok" parameterType="Users">
		update users
		set login_ok = #{ login_ok }
		where user_email = #{ user_email }
	</update>
	
	<update id="updateAdminAuth" parameterType="Users">
		update users
		set admin_ok = #{ admin_ok }
		where user_email = #{ user_email }
	</update>

	
	<!-- 검색용 select -->
	<select id="selectSearchUser_email" parameterType="string" resultMap="resultUsers">
		select * from users
		where user_email like '%' || #{ keyword } || '%'
	</select>
	
	
	<select id="selectSearchEnrollDate" parameterType="SearchDate" resultMap="resultUsers">
		select * from users
		where create_at between #{ begin } and #{ end }
	</select>
	
	<select id="selectSearchLoginOK" parameterType="string" resultMap="resultUsers">
		select * from users
		where login_ok = #{ keyword }
	</select>
	
	<select id="selectSearchAdminOK" parameterType="string" resultMap="resultUsers">
		select * from users
		where admin_ok = #{ keyword }
	</select>

</mapper>





