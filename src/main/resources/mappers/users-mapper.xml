<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
		"-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="usersMapper">

	<resultMap type="Users" id="resultuser">
		<id property="user_email" column="user_email"/>
		<result property="user_password" column="user_password"/>
		<result property="user_name" column="user_name"/>
		<result property="user_phone" column="user_phone"/>
		<result property="user_post_code" column="user_post_code"/>
		<result property="user_address1" column="user_address1"/>
		<result property="user_address2" column="user_address2"/>
		<result property="user_allergy" column="user_allergy"/>
		<result property="create_at" column="create_at"/>
		<result property="modified_at" column="modified_at"/>
		<result property="login_ok" column="login_ok"/>
		<result property="is_admin" column="is_admin"/>
	</resultMap>


	<!-- 회원가입 입력용 -->
	<insert id="insertUsers" parameterType="Users">
		insert into users(
			user_email, user_password, user_name, user_phone, user_post_code, user_address1, user_address2,
			user_allergy,  create_at, modified_at, login_ok, is_admin)
		values(#{user_email}, #{user_password}, #{user_name}, #{user_phone}, #{user_post_code}, #{user_address1},
			   #{user_address2}, #{user_allergy}, sysdate, sysdate, default, default)
	</insert>

	<!-- 아이디 중복검사 -->
	<select id="selectDupCheckID" parameterType="string" resultType="_int">
		select count(user_email)
		from users
		where user_email = #{user_email}
	</select>



	<!-- ID를 통해 회원정보 불러오기-->
	<select id="selectUsers" parameterType="string" resultMap="resultuser" >
		select *
		from users
		where user_email = #{user_email}
	</select>

	<!--마이페이지 개인정보 수정 -->
	<update id="updateUsers" parameterType="Users">
		update users
		set user_password = #{user_password},
			modified_at = sysdate,
			user_post_code = #{user_post_code},
			user_address1 = #{user_address1},
			user_address2 = #{user_address2}
		where user_email = #{user_email}
	</update>



	<!--회원탈퇴 시 회원삭제 = 해야하는 일단은 로그인제한으로 변경해서 처리만 하고 따로 정보제거하도록함-->
	<delete id="deleteUsers" parameterType="string">
		delete from users
		where user_email = #{user_email}
		  and user_name = #{user_name}
		  and user_phone = #{user_phone}
	</delete>

	<!-- 로그인 처리용 -->
	<select id="selectusersLogin" parameterType="Users" resultMap="resultuser">
		select user_email, user_password
		from users
		where user_email = #{user_email}
		  and login_ok = 'Y'
	</select>


	<!--아이디 찾기-->
	<select id="selectFindUsersID" parameterType="Users" resultType="string">
		select user_email
		from users
		where user_name = #{user_name}
		  and user_phone = #{user_phone}
	</select>

	<!--회원정보가 있다면 비밀번호 재설정(새로 만들기)-->
	<update id="updateUsersPWD" parameterType="string">
		update users
		set user_password = #{new_user_password}
		where user_email = #{user_email}
	</update>

	<!--비밀번호 재설정된다면 기존 비밀번호 삭제-->
	<delete id="selectUsersPWD" parameterType="string">
		delete
		from users
		where user_password = #{original_user_password}
	</delete>

	<select id="selectUsersLogin" resultMap="resultuser">
		select * from users
	</select>
</mapper>